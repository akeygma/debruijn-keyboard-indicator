Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega32u4.o (exit)
/usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_copy_data.o)
                              example.o (__do_copy_data)
/usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_clear_bss.o)
                              example.o (__do_clear_bss)

Discarded input sections

 .data          0x0000000000000000        0x0 /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
 .text          0x0000000000000000        0x0 example.o
 .data          0x0000000000000000        0xa example.o
 .bss           0x0000000000000000        0x2 example.o
 .text          0x0000000000000000        0x0 usb_keyboard.o
 .text.usb_keyboard_send
                0x0000000000000000       0x70 usb_keyboard.o
 .text.usb_keyboard_press
                0x0000000000000000       0x1e usb_keyboard.o
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_exit.o)
 .data          0x0000000000000000        0x0 /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_exit.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_exit.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_copy_data.o)
 .data          0x0000000000000000        0x0 /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_copy_data.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_copy_data.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_clear_bss.o)
 .data          0x0000000000000000        0x0 /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_clear_bss.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_clear_bss.o)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
LOAD example.o
LOAD usb_keyboard.o
LOAD /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/libm.a
START GROUP
LOAD /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/libm.a
LOAD /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/libatmega32u4.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x5d2
 *(.vectors)
 .vectors       0x0000000000000000       0xac /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x00000000000000ac                . = ALIGN (0x2)
                0x00000000000000ac                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000000000000ac        0x0 linker stubs
 *(.trampolines*)
                0x00000000000000ac                __trampolines_end = .
 *(.progmem*)
 .progmem.data  0x00000000000000ac       0xd4 usb_keyboard.o
                0x0000000000000180                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000180                __ctors_start = .
 *(.ctors)
                0x0000000000000180                __ctors_end = .
                0x0000000000000180                __dtors_start = .
 *(.dtors)
                0x0000000000000180                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000180        0x0 /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
                0x0000000000000180                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000180        0xc /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000000000000018c       0x16 /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_copy_data.o)
                0x000000000000018c                __do_copy_data
 .init4         0x00000000000001a2       0x10 /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_clear_bss.o)
                0x00000000000001a2                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000000000001b2        0x4 /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
 *(.init9)
 *(.text)
 .text          0x00000000000001b6        0x2 /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
                0x00000000000001b6                __vector_38
                0x00000000000001b6                __vector_22
                0x00000000000001b6                __vector_28
                0x00000000000001b6                __vector_1
                0x00000000000001b6                __vector_32
                0x00000000000001b6                __vector_34
                0x00000000000001b6                __vector_24
                0x00000000000001b6                __vector_12
                0x00000000000001b6                __bad_interrupt
                0x00000000000001b6                __vector_6
                0x00000000000001b6                __vector_31
                0x00000000000001b6                __vector_35
                0x00000000000001b6                __vector_39
                0x00000000000001b6                __vector_3
                0x00000000000001b6                __vector_30
                0x00000000000001b6                __vector_25
                0x00000000000001b6                __vector_13
                0x00000000000001b6                __vector_17
                0x00000000000001b6                __vector_19
                0x00000000000001b6                __vector_7
                0x00000000000001b6                __vector_41
                0x00000000000001b6                __vector_27
                0x00000000000001b6                __vector_5
                0x00000000000001b6                __vector_33
                0x00000000000001b6                __vector_37
                0x00000000000001b6                __vector_4
                0x00000000000001b6                __vector_9
                0x00000000000001b6                __vector_2
                0x00000000000001b6                __vector_21
                0x00000000000001b6                __vector_15
                0x00000000000001b6                __vector_36
                0x00000000000001b6                __vector_29
                0x00000000000001b6                __vector_40
                0x00000000000001b6                __vector_8
                0x00000000000001b6                __vector_26
                0x00000000000001b6                __vector_14
                0x00000000000001b6                __vector_16
                0x00000000000001b6                __vector_18
                0x00000000000001b6                __vector_20
                0x00000000000001b6                __vector_42
                0x00000000000001b8                . = ALIGN (0x2)
 *(.text.*)
 .text.startup.main
                0x00000000000001b8       0x50 example.o
                0x00000000000001b8                main
 .text.__vector_23
                0x0000000000000208       0x14 example.o
                0x0000000000000208                __vector_23
 .text.usb_wait_in_ready
                0x000000000000021c        0xa usb_keyboard.o
 .text.usb_init
                0x0000000000000226       0x2e usb_keyboard.o
                0x0000000000000226                usb_init
 .text.usb_configured
                0x0000000000000254        0x6 usb_keyboard.o
                0x0000000000000254                usb_configured
 .text.__vector_10
                0x000000000000025a       0xb8 usb_keyboard.o
                0x000000000000025a                __vector_10
 .text.__vector_11
                0x0000000000000312      0x2bc usb_keyboard.o
                0x0000000000000312                __vector_11
                0x00000000000005ce                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000005ce        0x0 /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_exit.o)
                0x00000000000005ce                exit
                0x00000000000005ce                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000005ce        0x4 /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x00000000000005d2                _etext = .

.data           0x0000000000800100        0x2 load address 0x00000000000005d2
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x2 usb_keyboard.o
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800102                . = ALIGN (0x2)
                0x0000000000800102                _edata = .
                0x0000000000800102                PROVIDE (__data_end, .)

.bss            0x0000000000800102        0xb
                0x0000000000800102                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800102        0xb usb_keyboard.o
                0x0000000000800102                keyboard_leds
                0x0000000000800103                keyboard_keys
                0x0000000000800109                keyboard_modifier_keys
 *(.bss*)
 *(COMMON)
                0x000000000080010d                PROVIDE (__bss_end, .)
                0x00000000000005d2                __data_load_start = LOADADDR (.data)
                0x00000000000005d4                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x000000000080010d        0x0
                [!provide]                        PROVIDE (__noinit_start, .)
 *(.noinit*)
                [!provide]                        PROVIDE (__noinit_end, .)
                0x000000000080010d                _end = .
                [!provide]                        PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 example.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000011       0x12 usb_keyboard.o

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x40
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x40 /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega32u4.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000       0x78
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x28 example.o
 .debug_aranges
                0x0000000000000028       0x50 usb_keyboard.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000     0x12ee
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0x9f4 /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
 .debug_info    0x00000000000009f4      0x1e6 example.o
 .debug_info    0x0000000000000bda      0x714 usb_keyboard.o

.debug_abbrev   0x0000000000000000      0xc94
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x96a /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
 .debug_abbrev  0x000000000000096a      0x142 example.o
 .debug_abbrev  0x0000000000000aac      0x1e8 usb_keyboard.o

.debug_line     0x0000000000000000      0x2e4
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000       0x1d /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
 .debug_line    0x000000000000001d       0xc0 example.o
 .debug_line    0x00000000000000dd      0x207 usb_keyboard.o

.debug_frame    0x0000000000000000      0x168
 *(.debug_frame)
 .debug_frame   0x0000000000000000       0x40 example.o
 .debug_frame   0x0000000000000040      0x128 usb_keyboard.o

.debug_str      0x0000000000000000      0x79e
 *(.debug_str)
 .debug_str     0x0000000000000000      0x374 /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
 .debug_str     0x0000000000000374      0x1ae example.o
                                        0x1ed (size before relaxing)
 .debug_str     0x0000000000000522      0x27c usb_keyboard.o
                                        0x3e4 (size before relaxing)

.debug_loc      0x0000000000000000      0x94b
 *(.debug_loc)
 .debug_loc     0x0000000000000000       0x2f example.o
 .debug_loc     0x000000000000002f      0x91c usb_keyboard.o

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges   0x0000000000000000       0xa0
 *(.debug_ranges)
 .debug_ranges  0x0000000000000000       0x18 example.o
 .debug_ranges  0x0000000000000018       0x88 usb_keyboard.o

.debug_macro
 *(.debug_macro)
OUTPUT(example.elf elf32-avr)
LOAD linker stubs

Cross Reference Table

Symbol                                            File
__bad_interrupt                                   /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__bss_end                                         /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_clear_bss.o)
__bss_start                                       /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_clear_bss.o)
__data_end                                        /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_copy_data.o)
__data_load_start                                 /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_copy_data.o)
__data_start                                      /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_copy_data.o)
__do_clear_bss                                    /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_clear_bss.o)
                                                  usb_keyboard.o
                                                  example.o
__do_copy_data                                    /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_copy_data.o)
                                                  usb_keyboard.o
                                                  example.o
__heap_end                                        /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__init                                            /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__stack                                           /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_1                                        /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_10                                       usb_keyboard.o
                                                  /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_11                                       usb_keyboard.o
                                                  /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_12                                       /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_13                                       /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_14                                       /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_15                                       /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_16                                       /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_17                                       /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_18                                       /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_19                                       /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_2                                        /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_20                                       /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_21                                       /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_22                                       /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_23                                       example.o
                                                  /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_24                                       /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_25                                       /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_26                                       /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_27                                       /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_28                                       /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_29                                       /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_3                                        /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_30                                       /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_31                                       /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_32                                       /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_33                                       /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_34                                       /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_35                                       /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_36                                       /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_37                                       /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_38                                       /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_39                                       /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_4                                        /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_40                                       /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_41                                       /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_42                                       /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_5                                        /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_6                                        /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_7                                        /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_8                                        /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_9                                        /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vector_default                                  /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
__vectors                                         /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
_exit                                             /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_exit.o)
exit                                              /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_exit.o)
                                                  /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
idle_count                                        example.o
keyboard_keys                                     usb_keyboard.o
keyboard_leds                                     usb_keyboard.o
                                                  example.o
keyboard_modifier_keys                            usb_keyboard.o
main                                              example.o
                                                  /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega32u4.o
number_keys                                       example.o
usb_configured                                    usb_keyboard.o
                                                  example.o
usb_init                                          usb_keyboard.o
                                                  example.o
usb_keyboard_press                                usb_keyboard.o
usb_keyboard_send                                 usb_keyboard.o
